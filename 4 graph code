###Team 6
### Andrew Sexton, Ella Pan, Steven Alvarado, Alexa Mikeska 

### We are trying to show... 3 different investment vehicles alongside the 
### CBOE Volatility Index and see if they move independently, together, or
### perhaps opposite each other

# Import yfinance library for downloading financial data, utilized AI to learn how to import yfinance 
import yfinance as yf
import matplotlib.pyplot as plt

# Define the tickers (symbols) we want to analyze
tickers = ["BTC-USD", "GC=F", "^GSPC", "^VIX"]
# "BTC-USD" = Bitcoin in US dollars
# "GC=F"    = Gold Futures
# "^GSPC"   = S&P 500 Index
# "^VIX"    = CBOE Volatility Index

data = yf.download(
    tickers,
    start="2024-01-01",
    end="2025-01-01")["Close"]

# Normalize the close prices for comparison
# Formula: (value - min) / (max - min) â†’ rescales all values between 0 and 1
normalized = (data - data.min()) / (data.max() - data.min())

# Assign specific colors: Bitcoin blue, Gold orange, S&P 500 green, VIX black
colors = {
    'BTC-USD': 'blue',
    'GC=F': 'orange',    # Now orange instead of gold
    '^GSPC': 'green',
    '^VIX': 'black'
}
light_grey = '#f2f2f2'

fig, axes = plt.subplots(2, 2, figsize=(14, 10), sharex=True, facecolor=light_grey)

# 1. All assets + VIX
axes[0, 0].plot(normalized.index, normalized['BTC-USD'], label='Bitcoin', color=colors['BTC-USD'])
axes[0, 0].plot(normalized.index, normalized['GC=F'], label='Gold', color=colors['GC=F'])
axes[0, 0].plot(normalized.index, normalized['^GSPC'], label='S&P 500', color=colors['^GSPC'])
axes[0, 0].plot(normalized.index, normalized['^VIX'], label='VIX', linewidth=2, color=colors['^VIX'])
axes[0, 0].set_title('All Assets + VIX')
axes[0, 0].legend()
axes[0, 0].set_facecolor(light_grey)

# 2. Bitcoin + VIX
axes[0, 1].plot(normalized.index, normalized['BTC-USD'], label='Bitcoin', color=colors['BTC-USD'])
axes[0, 1].plot(normalized.index, normalized['^VIX'], label='VIX', linewidth=2, color=colors['^VIX'])
axes[0, 1].set_title('Bitcoin + VIX')
axes[0, 1].legend()
axes[0, 1].set_facecolor(light_grey)

# 3. Gold + VIX
axes[1, 0].plot(normalized.index, normalized['GC=F'], label='Gold', color=colors['GC=F'])
axes[1, 0].plot(normalized.index, normalized['^VIX'], label='VIX', linewidth=2, color=colors['^VIX'])
axes[1, 0].set_title('Gold + VIX')
axes[1, 0].legend()
axes[1, 0].set_facecolor(light_grey)

# 4. S&P 500 + VIX
axes[1, 1].plot(normalized.index, normalized['^GSPC'], label='S&P 500', color=colors['^GSPC'])
axes[1, 1].plot(normalized.index, normalized['^VIX'], label='VIX', linewidth=2, color=colors['^VIX'])
axes[1, 1].set_title('S&P 500 + VIX')
axes[1, 1].legend()
axes[1, 1].set_facecolor(light_grey)

for ax in axes.flat:
    ax.set_xlabel("Date")
    ax.set_ylabel("Normalized Price")
    ax.grid(True, linestyle='--', alpha=0.3)

plt.tight_layout()
plt.show()
